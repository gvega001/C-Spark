@page "/gamification"

<PageTitle>Gamification & Achievements</PageTitle>

<style>
    /* Layout Container */
    .gamification-container {
        max-width: 900px;
        margin: auto;
        padding: 20px;
        font-family: Arial, sans-serif;
    }

    /* Banner */
    .gamification-banner {
        background: linear-gradient(to right, #007acc, #61dafb);
        color: white;
        padding: 30px;
        border-radius: 10px;
        text-align: center;
    }

    /* Card-Based Layout */
    .gamification-card {
        background: #ffffff;
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 20px;
        margin-top: 20px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    /* Progress Bar */
    .progress-bar {
        width: 100%;
        height: 10px;
        border-radius: 5px;
        background: #eee;
        margin-top: 10px;
        overflow: hidden;
    }

    .progress-bar-inner {
        height: 100%;
        background: #007acc;
        transition: width 0.5s ease-in-out;
    }

    /* Achievement List */
    .achievements-list {
        list-style-type: none;
        padding: 0;
    }

        .achievements-list li {
            display: flex;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #eee;
        }

    .achievements-icon {
        width: 30px;
        height: 30px;
        margin-right: 10px;
    }

    /* Analytics Section */
    .analytics-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 20px;
    }

    .stat-box {
        background: #f9f9f9;
        padding: 15px;
        border-radius: 8px;
        text-align: center;
    }

    .stat-number {
        font-size: 1.8rem;
        font-weight: bold;
        color: #007acc;
    }
</style>

<div class="gamification-container">
    <!-- Header -->
    <div class="gamification-banner">
        <h1>Gamification & Achievements</h1>
        <p>Track your progress and unlock new achievements as you code!</p>
    </div>

    <!-- Progress Overview -->
    <div class="gamification-card">
        <h2>Progress Overview</h2>
        <p>Current Streak: <strong>@currentStreak</strong> days</p>
        <p>Programs Run: <strong>@programRuns</strong></p>
        <p>Completed Challenges: <strong>@completedChallenges</strong></p>
        <div class="progress-bar">
            <div class="progress-bar-inner" style="width:@(programRuns)%"></div>
        </div>
    </div>

    <!-- Unlocked Achievements -->
    <div class="gamification-card">
        <h2>Unlocked Achievements</h2>
        @if (unlockedAchievements.Any())
        {
            <ul class="achievements-list">
                @foreach (var achievement in unlockedAchievements)
                {
                    <li>
                        <img src="icons/trophy.svg" class="achievements-icon" alt="Achievement">
                        <strong>@achievement.Title</strong> - @achievement.DateUnlocked.ToShortDateString()
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No achievements unlocked yet. Keep coding!</p>
        }
    </div>

    <!-- Performance Analytics -->
    <div class="gamification-card">
        <h2>Performance Analytics</h2>
        <div class="analytics-grid">
            <div class="stat-box">
                <p>Lines of Code Written</p>
                <p class="stat-number">@linesOfCode</p>
            </div>
            <div class="stat-box">
                <p>Debugging Success Rate</p>
                <p class="stat-number">@debugSuccessRate%</p>
            </div>
        </div>
    </div>
</div>

@code {
    private int currentStreak = 5;
    private int programRuns = 27;
    private int completedChallenges = 8;
    private int linesOfCode = 1500;
    private double debugSuccessRate = 85.4;

    private List<Achievement> unlockedAchievements = new List<Achievement>();

    protected override async Task OnInitializedAsync()
    {
        await LoadGamificationData();
    }

    private async Task LoadGamificationData()
    {
        // Placeholder for backend API call
        await Task.Delay(500); // Simulate API delay

        unlockedAchievements = new List<Achievement>
        {
            new Achievement { Title = "First Program", DateUnlocked = DateTime.Now.AddDays(-10) },
            new Achievement { Title = "Debugger Master", DateUnlocked = DateTime.Now.AddDays(-5) },
            new Achievement { Title = "100 Lines of Code", DateUnlocked = DateTime.Now.AddDays(-2) }
        };

        StateHasChanged(); // Refresh UI after loading
    }

    private class Achievement
    {
        public string Title { get; set; } = "";
        public DateTime DateUnlocked { get; set; }
    }
}
