@page "/"
@using CSparkIDE.Shared.Services
@inject IFormFactor FormFactor

<PageTitle>Home</PageTitle>

<div class="home-container">
    <div class="welcome-section">
        <h1>Welcome to C-Spark IDE! 🚀</h1>
        <p>Empowering students to learn programming in an interactive environment.</p>
    </div>

    <div class="platform-info">
        <p>You're running this app on:</p>
        <ul>
            <li><strong>Device Form Factor:</strong> @factor</li>
            <li><strong>Platform:</strong> @platform</li>
        </ul>
    </div>

    <div class="quick-start">
        <h2>Quick Start Guide</h2>
        <p>Jump in and start coding right away! Here are some quick links:</p>
        <ul>
            <li><NavLink href="projects" class="quick-link">📂 View Projects</NavLink></li>
            <li><NavLink href="editor" class="quick-link">💻 Open Code Editor</NavLink></li>
            <li><NavLink href="debugger" class="quick-link">🐞 Debug Code</NavLink></li>
            <li><NavLink href="settings" class="quick-link">⚙️ Configure Settings</NavLink></li>
        </ul>
    </div>

    <div class="recent-projects">
        <h2>Recent Projects</h2>
        @if (RecentProjects.Any())
        {
            <ul>
                @foreach (var project in RecentProjects)
                {
                    <li>
                        <NavLink href="@($"editor?project={project.Id}")">
                            📝 @project.Name - Last opened on @project.LastModified.ToString("MMMM dd, yyyy")
                        </NavLink>
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No recent projects found. Start a <NavLink href="projects">new project</NavLink> today!</p>
        }
    </div>
</div>

@code {
    private string factor => FormFactor.GetFormFactor();
    private string platform => FormFactor.GetPlatform();

    private List<ProjectModel> RecentProjects = new List<ProjectModel>
    {
        new ProjectModel { Id = 1, Name = "Hello World", LastModified = DateTime.Now.AddDays(-2) },
        new ProjectModel { Id = 2, Name = "Game Logic", LastModified = DateTime.Now.AddDays(-5) }
    };

    private class ProjectModel
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public DateTime LastModified { get; set; }
    }
}
