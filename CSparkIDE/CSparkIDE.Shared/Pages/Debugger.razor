@page "/debugger"
@using CSparkIDE.Shared.Services

<PageTitle>Debugger</PageTitle>

<!-- FontAwesome Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

<style>
    /* Global Styles */
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: #f0f2f5;
        color: #333;
        margin: 0;
        padding: 0;
    }

    /* Container */
    .debugger-container {
        max-width: 100%;
        margin: 0 auto;
        padding: 20px;
    }

    /* Header Banner */
    .debugger-banner {
        background: linear-gradient(to right, #007acc, #61dafb);
        color: #fff;
        padding: 30px;
        border-radius: 10px;
        text-align: center;
        margin-bottom: 20px;
    }

        .debugger-banner h1 {
            margin: 0;
            font-size: 2.2rem;
        }

        .debugger-banner p {
            margin: 5px 0 0;
            font-size: 1.2rem;
        }

    /* Card Styling */
    .debugger-card {
        background: #fff;
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .debugger-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

    /* Button Styling */
    .debugger-controls {
        display: flex;
        flex-direction: row; /* Landscape layout */
        justify-content: flex-start;
        align-items: center;
        gap: 10px;
    }

    .btn {
        width: 150px; /* Fixed width */
        height: 45px; /* Fixed height */
        padding: 10px 15px;
        border: none;
        cursor: pointer;
        border-radius: 5px;
        font-weight: bold;
        text-align: center;
        font-size: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px; /* Space between icon and text */
        transition: opacity 0.2s ease, transform 0.2s ease;
    }

        .btn:hover {
            opacity: 0.9;
            transform: scale(1.05);
        }

    .btn-primary {
        background: #007acc;
        color: #fff;
    }

    .btn-secondary {
        background: #3c3c3c;
        color: #fff;
    }

    .btn-danger {
        background: #d9534f;
        color: #fff;
    }

    /* Table Styling */
    .table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
    }

        .table th,
        .table td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }

        .table th {
            background: #f5f5f5;
        }

    /* Console Output */
    .console-box {
        background: #1e1e1e;
        color: #fff;
        padding: 10px;
        border-radius: 5px;
        height: 150px;
        overflow-y: auto;
    }

    .console-line {
        font-family: monospace;
    }

    /* AST Visualization */
    .ast-box {
        background: #f5f5f5;
        padding: 15px;
        border-radius: 5px;
        text-align: center;
    }

    .ast-node {
        display: inline-block;
        padding: 8px 12px;
        background: #007acc;
        color: #fff;
        border-radius: 5px;
        margin: 5px;
        transition: transform 0.2s ease;
    }

        .ast-node:hover {
            transform: scale(1.05);
        }

    /* Icon Styling */
    .icon {
        font-size: 18px;
    }
</style>

<div class="debugger-container">
    <!-- Header -->
    <header class="debugger-banner" role="banner">
        <h1>Debugger & Console</h1>
        <p>Analyze your code execution, track variables, and debug step by step.</p>
    </header>

    <!-- Step-Through Debugging -->
    <article class="debugger-card" aria-labelledby="step-through-heading">
        <h2 id="step-through-heading">Step-Through Execution</h2>
        <div class="debugger-controls" role="group" aria-label="Debugging Controls">
            <button type="button" class="btn btn-primary" @onclick="StepOver" title="Step Over">
                <i class="fas fa-arrow-right icon"></i> Step Over
            </button>
            <button type="button" class="btn btn-secondary" @onclick="StepInto" title="Step Into">
                <i class="fas fa-sign-in-alt icon"></i> Step Into
            </button>
            <button type="button" class="btn btn-danger" @onclick="ResetDebugger" title="Reset Debugger">
                <i class="fas fa-redo icon"></i> Reset
            </button>
        </div>
    </article>

    <!-- Variable Tracking -->
    <article class="debugger-card" aria-labelledby="variable-tracking-heading">
        <h2 id="variable-tracking-heading">Variable Tracking</h2>
        <table class="table" aria-describedby="variable-tracking-desc">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Value</th>
                    <th>Type</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var variable in DebugVariables)
                {
                    <tr>
                        <td>@variable.Name</td>
                        <td>@variable.Value</td>
                        <td>@variable.Type</td>
                    </tr>
                }
            </tbody>
        </table>
    </article>

    <!-- Console Output -->
    <article class="debugger-card" aria-labelledby="console-output-heading">
        <h2 id="console-output-heading">Console Output</h2>
        <div class="console-box" role="log" aria-live="polite">
            @foreach (var log in ConsoleLogs)
            {
                <div class="console-line">@log</div>
            }
        </div>
    </article>

    <!-- AST Visualization -->
    <article class="debugger-card" aria-labelledby="ast-visualization-heading">
        <h2 id="ast-visualization-heading">AST Visualization</h2>
        <div class="ast-box">
            @foreach (var node in ASTNodes)
            {
                <div class="ast-node" tabindex="0" title="AST Node">@node</div>
            }
        </div>
    </article>
</div>

@code {
    private List<VariableData> DebugVariables = new();
    private List<string> ConsoleLogs = new();
    private List<string> ASTNodes = new();

    private void StepOver()
    {
        ConsoleLogs.Add("[Debugger] Step Over executed.");
        SimulateASTChange();
    }

    private void StepInto()
    {
        ConsoleLogs.Add("[Debugger] Step Into executed.");
        SimulateVariableChange();
    }

    private void ResetDebugger()
    {
        ConsoleLogs.Clear();
        DebugVariables.Clear();
        ASTNodes.Clear();
    }

    private void SimulateVariableChange()
    {
        DebugVariables.Add(new VariableData { Name = "counter", Value = "5", Type = "int" });
    }

    private void SimulateASTChange()
    {
        ASTNodes.Add("if-condition");
        ASTNodes.Add("loop-body");
    }

    private class VariableData
    {
        public string? Name { get; set; }
        public string? Value { get; set; }
        public string? Type { get; set; }
    }
}
