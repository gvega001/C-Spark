@page "/debugger"
@using CSparkIDE.Shared.Services

<PageTitle>Debugger</PageTitle>

<style>
    /* Layout Container */
    .debugger-container {
        max-width: 1000px;
        margin: auto;
        padding: 20px;
        font-family: Arial, sans-serif;
    }

    /* Banner */
    .debugger-banner {
        background: linear-gradient(to right, #007acc, #61dafb);
        color: white;
        padding: 30px;
        border-radius: 10px;
        text-align: center;
    }

    /* Card-Based Layout */
    .debugger-card {
        background: #ffffff;
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 20px;
        margin-top: 20px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    /* Buttons */
    .btn {
        padding: 10px 15px;
        border: none;
        cursor: pointer;
        border-radius: 5px;
        font-weight: bold;
        text-align: center;
        margin-right: 10px;
    }

    .btn-primary {
        background: #007acc;
        color: white;
    }

    .btn-secondary {
        background: #3c3c3c;
        color: white;
    }

    .btn-danger {
        background: #d9534f;
        color: white;
    }

    /* Table Styling */
    .table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
    }

        .table th, .table td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }

        .table th {
            background: #f5f5f5;
        }

    /* Console Output */
    .console-box {
        background: #1e1e1e;
        color: white;
        padding: 10px;
        border-radius: 5px;
        height: 150px;
        overflow-y: auto;
    }

    .console-line {
        font-family: monospace;
    }

    /* AST Visualization */
    .ast-box {
        background: #f5f5f5;
        padding: 15px;
        border-radius: 5px;
        text-align: center;
    }

    .ast-node {
        display: inline-block;
        padding: 8px 12px;
        background: #007acc;
        color: white;
        border-radius: 5px;
        margin: 5px;
    }
</style>

<div class="debugger-container">
    <!-- Header -->
    <div class="debugger-banner">
        <h1>Debugger & Console</h1>
        <p>Analyze your code execution, track variables, and debug step by step.</p>
    </div>

    <!-- Step-Through Debugging -->
    <div class="debugger-card">
        <h2>Step-Through Execution</h2>
        <button class="btn btn-primary" @onclick="StepOver">Step Over</button>
        <button class="btn btn-secondary" @onclick="StepInto">Step Into</button>
        <button class="btn btn-danger" @onclick="ResetDebugger">Reset</button>
    </div>

    <!-- Variable Tracking -->
    <div class="debugger-card">
        <h2>Variable Tracking</h2>
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Value</th>
                    <th>Type</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var variable in DebugVariables)
                {
                    <tr>
                        <td>@variable.Name</td>
                        <td>@variable.Value</td>
                        <td>@variable.Type</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Console Output -->
    <div class="debugger-card">
        <h2>Console Output</h2>
        <div class="console-box">
            @foreach (var log in ConsoleLogs)
            {
                <div class="console-line">@log</div>
            }
        </div>
    </div>

    <!-- AST Visualization -->
    <div class="debugger-card">
        <h2>AST Visualization</h2>
        <div class="ast-box">
            @foreach (var node in ASTNodes)
            {
                <div class="ast-node">@node</div>
            }
        </div>
    </div>
</div>

@code {
    private List<VariableData> DebugVariables = new();
    private List<string> ConsoleLogs = new();
    private List<string> ASTNodes = new();

    private void StepOver()
    {
        ConsoleLogs.Add("[Debugger] Step Over executed.");
        SimulateASTChange();
    }

    private void StepInto()
    {
        ConsoleLogs.Add("[Debugger] Step Into executed.");
        SimulateVariableChange();
    }

    private void ResetDebugger()
    {
        ConsoleLogs.Clear();
        DebugVariables.Clear();
        ASTNodes.Clear();
    }

    private void SimulateVariableChange()
    {
        DebugVariables.Add(new VariableData { Name = "counter", Value = "5", Type = "int" });
    }

    private void SimulateASTChange()
    {
        ASTNodes.Add("if-condition");
        ASTNodes.Add("loop-body");
    }

    private class VariableData
    {
        public string? Name { get; set; }
        public string? Value { get; set; }
        public string? Type { get; set; }
    }
}
