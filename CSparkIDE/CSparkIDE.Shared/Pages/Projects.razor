@page "/projects"
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime

<PageTitle>Projects</PageTitle>

<!-- FontAwesome Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

<style>
    /* Global Styles */
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: #f0f2f5;
        color: #333;
        margin: 0;
        padding: 0;
    }

    /* Container */
    .projects-container {
        max-width: 1100px;
        margin: 0 auto;
        padding: 20px;
    }

    /* Banner */
    .projects-banner {
        background: linear-gradient(to right, #007acc, #61dafb);
        color: #fff;
        padding: 30px;
        border-radius: 10px;
        text-align: center;
        margin-bottom: 20px;
    }

        .projects-banner h1 {
            margin: 0;
            font-size: 2.2rem;
        }

        .projects-banner p {
            margin: 5px 0 0;
            font-size: 1.2rem;
        }

    /* Card Styling */
    .projects-card {
        background: #fff;
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .projects-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

    /* Buttons */
    .btn {
        padding: 8px 12px;
        border: none;
        cursor: pointer;
        border-radius: 5px;
        font-weight: bold;
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px; /* Space between icon and text */
        transition: opacity 0.2s ease, transform 0.2s ease;
    }

        .btn:hover {
            opacity: 0.9;
            transform: scale(1.05);
        }

    .btn-primary {
        background: #007acc;
        color: #fff;
    }

    .btn-secondary {
        background: #3c3c3c;
        color: #fff;
    }

    .btn-danger {
        background: #d9534f;
        color: #fff;
    }

    /* Project List */
    .project-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .project-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        border-bottom: 1px solid #eee;
    }

        .project-item:last-child {
            border-bottom: none;
        }

        .project-item a {
            text-decoration: none;
            color: #007acc;
            font-weight: bold;
        }

            .project-item a:hover {
                text-decoration: underline;
            }

    /* Project Actions */
    .project-actions {
        display: flex;
        gap: 5px;
    }

        .project-actions button {
            padding: 6px 10px;
            font-size: 0.9rem;
        }

    /* New Project Input */
    .new-project-input {
        display: flex;
        align-items: center;
        margin-top: 10px;
    }

        .new-project-input input {
            flex: 1;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-right: 10px;
        }
</style>

<div class="projects-container">
    <!-- Header Banner -->
    <header class="projects-banner" role="banner">
        <h1>Projects</h1>
        <p>Manage your C-Spark projects here.</p>
    </header>

    <main>
        <!-- Create New Project Section -->
        <section class="projects-card" aria-labelledby="create-project-heading">
            <h2 id="create-project-heading">Create a New Project</h2>
            <div class="new-project-input">
                <label for="newProjectInput" class="sr-only">Project Name</label>
                <input id="newProjectInput" type="text" placeholder="Enter project name..." @bind="newProjectName" />
                <button type="button" class="btn btn-primary" @onclick="CreateNewProject" title="Create Project">
                    <i class="fas fa-plus-circle"></i> Create
                </button>
            </div>
        </section>

        <!-- Existing Projects Section -->
        <section class="projects-card" aria-labelledby="your-projects-heading">
            <h2 id="your-projects-heading">Your Projects</h2>
            @if (projects.Any())
            {
                <ul class="project-list">
                    @foreach (var project in projects)
                    {
                        <li class="project-item">
                            <a href="@($"editor?project={project.Id}")" title="Open @project.Name">@project.Name</a>
                            <div class="project-actions">
                                <button type="button" class="btn btn-secondary" @onclick="() => RenameProject(project.Id)" title="Rename Project">
                                    <i class="fas fa-edit"></i> Rename
                                </button>
                                <button type="button" class="btn btn-danger" @onclick="() => DeleteProject(project.Id)" title="Delete Project">
                                    <i class="fas fa-trash-alt"></i> Delete
                                </button>
                            </div>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No projects found. Start a new project above!</p>
            }
        </section>
    </main>
</div>

@code {
    private string newProjectName = "";
    private List<ProjectModel> projects = new List<ProjectModel>
    {
        new ProjectModel { Id = 1, Name = "Hello World", LastModified = DateTime.Now.AddDays(-2) },
        new ProjectModel { Id = 2, Name = "Game Logic", LastModified = DateTime.Now.AddDays(-5) }
    };

    private void CreateNewProject()
    {
        if (!string.IsNullOrWhiteSpace(newProjectName))
        {
            projects.Add(new ProjectModel { Id = projects.Count + 1, Name = newProjectName, LastModified = DateTime.Now });
            newProjectName = "";
        }
    }

    private void RenameProject(int id)
    {
        var project = projects.FirstOrDefault(p => p.Id == id);
        if (project != null)
        {
            project.Name = "Renamed Project";
        }
    }

    private void DeleteProject(int id)
    {
        projects.RemoveAll(p => p.Id == id);
    }

    private class ProjectModel
    {
        public int Id { get; set; }
        public string? Name { get; set; }
        public DateTime LastModified { get; set; }
    }
}
